#!/usr/bin/env python
import sys, os, subprocess
import xml.etree.ElementTree as ET
import argparse
import numpy
from netCDF4 import Dataset


## This script was generated by setup_testcases.py as part of a driver_script file.
parser = argparse.ArgumentParser(description=__doc__, formatter_class=argparse.RawTextHelpFormatter)
parser.add_argument("--iteration_count", dest="iteration_count", default=1, type=int, help="The number of iterations between init and forward mode for computing a balanced sea-surface pressure.")
parser.add_argument("--first_iteration", dest="first_iteration", default=0, type=int, help="The iteration to start from (for continuing iteration if iterrupted or insufficient)")
parser.add_argument("--plot_ssh_ssp", dest="plot_ssh_ssp", action='store_true', help="If present, plot Cartesian ssh, ssp and deltaSSH fields for debugging.")
parser.add_argument("--plot_globalStats", dest="plot_globalStats", action='store_true', help="If present, plot mean and max KE, min layer thickness and mean temperature for debugging.")

args = parser.parse_args()
base_path = os.getcwd()
dev_null = open('/dev/null', 'w')
error = False

if(args.first_iteration == 0):
  subprocess.check_call(['ln', '-sfn', '../init_step2/', 'forward_iter/ic'], stdout=dev_null, stderr=dev_null, env=os.environ.copy())
  subprocess.check_call(['mkdir', '-p', 'forward_iter/statsPlots'], stdout=dev_null, stderr=dev_null, env=os.environ.copy())

for iterIndex in range(args.first_iteration,args.iteration_count):
    print " * Iteration %i/%i"%(iterIndex+1,args.iteration_count)
    os.chdir(base_path)
    os.chdir('forward_iter')

    print "   * Running forward_iter"
    # ./run.py
    subprocess.check_call(['./run.py'], stdout=dev_null, stderr=dev_null, env=os.environ.copy())
    print "   - Complete"

    if args.plot_globalStats:
        print "   * Plotting stats"
        subprocess.check_call(['../plot_globalStats.py', '--out_dir=statsPlots','--iteration=%i'%iterIndex, 'kineticEnergyCellMax',
                               'kineticEnergyCellAvg', 'layerThicknessMin'], stdout=dev_null, stderr=dev_null, env=os.environ.copy())
        print " - Complete"

    os.chdir(base_path)
    os.chdir('init_iter')

    print "   * Running init_iter"
    # ./run.py
    subprocess.check_call(['./run.py'], stdout=dev_null, stderr=dev_null, env=os.environ.copy())
    print "   - Complete"

    # Write the largest change in SSH and its lon/lat to a file
    outFile = open('maxDeltaSSH_%03i.log'%iterIndex,'w')
    inFile = Dataset('ocean.nc','r')

    deltaSSH = inFile.variables['deltaSSH'][0,:]
    lonCell = inFile.variables['lonCell'][:]
    latCell = inFile.variables['latCell'][:]
    ssh = inFile.variables['ssh'][0,:]
    ssp = inFile.variables['seaSurfacePressure'][0,:]
    inFile.close()
    indices = numpy.nonzero(ssp)[0]
    index = numpy.argmax(numpy.abs(deltaSSH[indices]))
    iCell = indices[index]
    outFile.write('deltaSSHMax: %g, lon/lat: %f %f, ssh: %g, ssp: %g\n'%(deltaSSH[iCell],
                                                                         180./numpy.pi*lonCell[iCell],
                                                                         180./numpy.pi*latCell[iCell],
                                                                         ssh[iCell], ssp[iCell]))
    outFile.close()

    if args.plot_ssh_ssp:
        print "   * Plotting fields"
        subprocess.check_call(['../plot_cart_ssh_ssp.py', '--iterIndex=%i'%iterIndex], stdout=dev_null, stderr=dev_null, env=os.environ.copy())
        print "   - Complete"

    os.chdir(base_path)
    subprocess.check_call(['ln', '-sfn', '../init_iter/', 'forward_iter/ic'], stdout=dev_null, stderr=dev_null, env=os.environ.copy())

os.chdir(base_path)

if error:
    sys.exit(1)
else:
    sys.exit(0)
